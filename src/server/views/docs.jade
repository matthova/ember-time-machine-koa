doctype html
html
  head
    meta(charset='UTF-8')
    title Swagger UI
    link(rel='icon', type='image/png', href='docs/images/favicon-32x32.png', sizes='32x32')
    link(rel='icon', type='image/png', href='docs/images/favicon-16x16.png', sizes='16x16')
    link(href='docs/css/typography.css', media='screen', rel='stylesheet', type='text/css')
    link(href='docs/css/reset.css', media='screen', rel='stylesheet', type='text/css')
    link(href='docs/css/screen.css', media='screen', rel='stylesheet', type='text/css')
    link(href='docs/css/reset.css', media='print', rel='stylesheet', type='text/css')
    link(href='docs/css/print.css', media='print', rel='stylesheet', type='text/css')
    script(src='docs/lib/jquery-1.8.0.min.js', type='text/javascript')
    script(src='docs/lib/jquery.slideto.min.js', type='text/javascript')
    script(src='docs/lib/jquery.wiggle.min.js', type='text/javascript')
    script(src='docs/lib/jquery.ba-bbq.min.js', type='text/javascript')
    script(src='docs/lib/handlebars-2.0.0.js', type='text/javascript')
    script(src='docs/lib/underscore-min.js', type='text/javascript')
    script(src='docs/lib/backbone-min.js', type='text/javascript')
    script(src='docs/swagger-ui.js', type='text/javascript')
    script(src='docs/lib/highlight.7.3.pack.js', type='text/javascript')
    script(src='docs/lib/jsoneditor.min.js', type='text/javascript')
    script(src='docs/lib/marked.js', type='text/javascript')
    script(src='docs/lib/swagger-oauth.js', type='text/javascript')
    // Some basic translations
    // <script src='lang/translator.js' type='text/javascript'></script>
    // <script src='lang/ru.js' type='text/javascript'></script>
    // <script src='lang/en.js' type='text/javascript'></script>
    script(type='text/javascript').
      $(function () {
      var url = !{JSON.stringify(middlewareLocation)};
      console.log('url!', url);
      // Pre load translate...
      if(window.SwaggerTranslator) {
      window.SwaggerTranslator.translate();
      }
      window.swaggerUi = new SwaggerUi({
      url: url,
      dom_id: "swagger-ui-container",
      supportedSubmitMethods: ['get', 'post', 'put', 'delete', 'patch'],
      onComplete: function(swaggerApi, swaggerUi){
      if(typeof initOAuth == "function") {
      initOAuth({
      clientId: "your-client-id",
      clientSecret: "your-client-secret-if-required",
      realm: "your-realms",
      appName: "your-app-name",
      scopeSeparator: ",",
      additionalQueryStringParams: {}
      });
      }
      if(window.SwaggerTranslator) {
      window.SwaggerTranslator.translate();
      }
      $('pre code').each(function(i, e) {
      hljs.highlightBlock(e)
      });
      addApiKeyAuthorization();
      },
      onFailure: function(data) {
      log("Unable to Load SwaggerUI");
      },
      docExpansion: "none",
      jsonEditor: false,
      apisSorter: "alpha",
      defaultModelRendering: 'schema',
      showRequestHeaders: false
      });
      function addApiKeyAuthorization(){
      var key = encodeURIComponent($('#input_apiKey')[0].value);
      if(key && key.trim() != "") {
      var apiKeyAuth = new SwaggerClient.ApiKeyAuthorization("api_key", key, "query");
      window.swaggerUi.api.clientAuthorizations.add("api_key", apiKeyAuth);
      log("added key " + key);
      }
      }
      $('#input_apiKey').change(addApiKeyAuthorization);
      // if you have an apiKey you would like to pre-populate on the page for demonstration purposes...
      /*
      var apiKey = "myApiKeyXXXX123456789";
      $('#input_apiKey').val(apiKey);
      */
      window.swaggerUi.load();
      function log() {
      if ('console' in window) {
      console.log.apply(console, arguments);
      }
      }
      });
  body.swagger-section
    #message-bar.swagger-ui-wrap(data-sw-translate='') Â 
    #swagger-ui-container.swagger-ui-wrap
